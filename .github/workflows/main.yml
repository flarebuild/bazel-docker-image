name: bazel

# Required secrets:
# GCP_SERVICE_ACCOUNT_EMAIL
# GCP_SERVICE_ACCOUNT_KEY

# Create IAM Role, create Service Account, bind role and obtain the key:
# gcloud iam service-accounts create "github-actions-image-pusher" --display-name="GH Actions Image Pusher" --description="Account to push images via GitHub Actions" --project="flare-build"
# gcloud iam roles create ImagePusher --project=flare-build --title=ImagePusher --description="Writes to Storage buckets" --permissions=storage.buckets.get,storage.multipartUploads.abort,storage.multipartUploads.create,storage.multipartUploads.list,storage.multipartUploads.listParts,storage.objects.create,storage.objects.delete,storage.objects.list
# gcloud projects add-iam-policy-binding "flare-build" --member="serviceAccount:github-actions-image-pusher@flare-build.iam.gserviceaccount.com" --role="projects/flare-build/roles/ImagePusher" --condition=None
# gcloud iam service-accounts keys create "/tmp/github-actions-image-pusher.json" --iam-account "github-actions-image-pusher@flare-build.iam.gserviceaccount.com"
# base64 /tmp/github-actions-image-pusher.json && rm /tmp/github-actions-image-pusher.json

env:
  GCP_PROJECT_ID: flare-build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  push-image:
    name: Push Image
    # Skip workflow entirely for [skip ci] commits
    if: |
      false == contains(github.event.commits[0].message, '[skip ci]') &&
      false == contains(github.event.commits[0].message, '[no ci]')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Import Service Account key
        run: echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 -d > /tmp/auth.json

      - name: GCloud Auth
        run: |
          gcloud --quiet auth \
          activate-service-account "${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}" \
          --key-file=/tmp/auth.json \
          --project="${GCP_PROJECT_ID}"

      - name: Docker Registry Auth (GCP)
        run: gcloud auth configure-docker

      - name: Build and push
        run: |
          docker buildx create --platform linux/amd64,linux/arm64 --use
          docker buildx build --push --platform linux/amd64,linux/arm64 -t gcr.io/flare-build/bazel:latest .

name: bazel

# Required secrets:
# GCP_SERVICE_ACCOUNT_KEY

# Create IAM Role, create Service Account, bind role and obtain the key:
# gcloud iam service-accounts create "github-actions-image-pusher" --display-name="GH Actions Image Pusher" --description="Account to push images via GitHub Actions" --project="flare-build"
# gcloud iam roles create ImagePusher --project=flare-build --title=ImagePusher --description="Writes to Storage buckets" --permissions=storage.buckets.get,storage.multipartUploads.abort,storage.multipartUploads.create,storage.multipartUploads.list,storage.multipartUploads.listParts,storage.objects.create,storage.objects.delete,storage.objects.list
# gcloud projects add-iam-policy-binding "flare-build" --member="serviceAccount:github-actions-image-pusher@flare-build.iam.gserviceaccount.com" --role="projects/flare-build/roles/ImagePusher" --condition=None
# gcloud iam service-accounts keys create "/tmp/github-actions-image-pusher.json" --iam-account "github-actions-image-pusher@flare-build.iam.gserviceaccount.com"
# base64 /tmp/github-actions-image-pusher.json && rm /tmp/github-actions-image-pusher.json

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  push-image:
    name: Push Image
    # Skip workflow entirely for [skip ci] commits
    if: |
      false == contains(github.event.commits[0].message, '[skip ci]') &&
      false == contains(github.event.commits[0].message, '[no ci]')
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key_base64
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # docker buildx build --platform=linux/amd64,linux/arm64 . -t bazel:latest
      # docker buildx build --platform=linux/amd64 . -t bazel:latest --load && docker run bazel:latest ...
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: gcr.io/flare-build/bazel:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
